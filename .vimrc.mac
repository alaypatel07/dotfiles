if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/bundle')

if has('mac')
    Plug 'junegunn/vim-xmark'
endif

" Plugins
call plug#begin('~/.vim/plugged')
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'k0kubun/vim-open-github'
Plug 'nsf/gocode'
Plug 'chriskempson/base16-vim'
Plug 'airblade/vim-gitgutter'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'kopischke/vim-fetch'
Plug 'Raimondi/delimitMate'
Plug 'sheerun/vim-polyglot'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'w0rp/ale'
Plug 'stephpy/vim-yaml'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'isobit/vim-darcula-colors', {'as': 'darcula'}
Plug 'scrooloose/nerdtree'
Plug 'tomtom/tcomment_vim'
Plug 'Townk/vim-autoclose'
call plug#end()


set showmode
set nocompatible                " Use Vim settings, rather than Vi settings (much better!).
set autoindent                  " Automatically indent new lines
set number                      " Display line numbers
"set cursorline                  " Underline the current line
set foldmethod=syntax           " Fold all indents by default, za to alternate the folds, zc to close and zo to open, zA, zC and zO also available
set ttyfast                     " Draw faster
set number relativenumber       " Display actual line number and relative number to cursor
set wildmenu                    " Vim command completion
set wildmode=longest:full,full  " Vim command completion matches longest string and use tab/shift+tab to navigate right/left
set ruler                       " Show line row-column numbers at the bottom
colo darcula                    " set colorscheme to delek
syntax on                       " Turn on vim syntax highlighting
set showmatch                   " Turn on completing braces
set matchtime=3                 " speed up matching completing braces
set backspace=indent,eol,start  " Allow backspacing over everything in insert mode.
set winwidth=120                " Minimum number of columns for current window
set list listchars=tab:¬\       " Show hidden characters
set expandtab                   " Tabs will be inserted with spaces
set shiftwidth=4                " Default tabbing wiih be 4 spaces
set softtabstop=4               " Default tab stop will be 4 spaces"


set splitright splitbelow       " New splits → New splits ↓
set scrolloff=10                " Show a few lines of context around the cursor.
set ignorecase                  " ignore case when searching
set incsearch                   " aearch as we enter text use * to search all the occurance of the word, use g* to search partial word. Use :%s//new/g to replace all occurences of a searched word
set hlsearch                    " highlight matches
set clipboard=unnamed           " Set common clipboard for system and vim

" Folding specifications
set foldignore=
set foldnestmax=10
set foldlevelstart=4            " starting fold level

hi Folded guifg=Red guibg=Black

" Remember the view
set viewoptions-=options
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview

" When the window is focused, both number and relative number is enabled otherwise just number
augroup numbertoggle
    autocmd!
    autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
    autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
augroup END



"Keyboard Mappings

" Enter Fuzzy finder mode in current directory
nmap <leader>o :FZF<cr>

" Start NERDtree on CTRL + n
map <leader><leader> :NERDTreeToggle<CR>

" Map Ctrl-l to indent the file
" nmap <C-i> gg=G<CR>

" Map Ctrl-d to exit the file
map <C-x> :wq!<cr>
imap <C-x> <esc>:wq!<cr>
" Map Ctrl-e to exit the file
map <C-e> :q!<cr>
imap <C-e> <esc>:q!<cr>

" Map Ctrl-Tab to change tabs
map <C-Tab> gt<cr>

" Map Ctrl-/ to comment followed by motion
nmap <C-f> gc<CR>

" Toogle search highlight with F2
map <leader>c :nohlsearch<CR>

" Set no indentation for CMD + v by default
set pastetoggle=<leader>p

"Set the <Space> key to toggle a selected fold opened/closed.
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
vnoremap <Space> zf Autocommands


" NERDtree command for changing tabs
map  <C-c> :tabnew<CR>

if has("autocmd")
    " Enable file type detection.
    filetype plugin on

    " When editing a file, always jump to the last known cursor position.
    autocmd BufReadPost *
                \ if line("'\"") >= 1 && line("'\"") <= line("$") |
                \   exe "normal! g`\"" |
                \ endif

    autocmd BufRead,BufNewFile *.py.stub set filetype=python
    autocmd BufRead,BufNewFile *.pod,*.svc,*.app,*.yml set filetype=yaml
    autocmd BufRead,BufNewFile Vagrantfile set filetype=ruby
    autocmd BufRead,BufNewFile *.zsh-theme set filetype=conf

    autocmd BufWritePre * %s/\s\+$//e

    " Disables automatic commenting on newline:
    autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
endif

let g:rg_command = '
  \ rg --column --line-number --no-heading --fixed-strings --ignore-case --no-ignore --hidden --follow --color "always"
  \ -g "*.{js,json,php,md,styl,jade,html,config,py,cpp,c,go,hs,rb,conf,yaml}"
  \ -g "!{.git,node_modules,vendor}/*" '

command! -bang -nargs=* F call fzf#vim#grep(g:rg_command .shellescape(<q-args>), 1, <bang>0)

nmap <leader>f :F<cr>
imap <leader>f <esc>:F<cr

let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4

" Nerd git plugin setup
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }

set winminwidth=25
